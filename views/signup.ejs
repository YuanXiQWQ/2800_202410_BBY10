<%- include("templates/header") %>

<head>
    <title><%= language.signupTitle %></title>
    <link rel="stylesheet" href="/styles/signup.css"/>
</head>

<div class="container mt-5 px-5">
    <div class="alert" id="statusMessage"></div>

    <div class="my-3">
        <h1 class="black d-inline-block border-bottom-2px py-1"><i><%= language.register %></i></h1>
    </div>

    <form id="signupForm" class="form-container">
        <p class="font-size-16 semiBold"><%= language.accountInformation %></p>

        <div class="mb-3">
            <label for="userName" class="form-label font-size-14"><%= language.username %></label>
            <input
                    name="username"
                    type="text"
                    class="form-control"
                    id="userName"
                    required
            />
            <div class="invalid-feedback" style="display: none">
                <%= language.usernameRequired %>
            </div>
        </div>
        <div class="mb-3">
            <label for="firstName" class="form-label font-size-14"><%= language.firstName %></label>
            <input
                    name="firstName"
                    type="text"
                    class="form-control"
                    id="firstName"
                    required
            />
            <div class="invalid-feedback" style="display: none">
                <%= language.firstNameRequired %>
            </div>
        </div>
        <div class="mb-3">
            <label for="lastName" class="form-label font-size-14"><%= language.lastName %></label>
            <input
                    name="lastName"
                    type="text"
                    class="form-control"
                    id="lastName"
                    required
            />
            <div class="invalid-feedback" style="display: none">
                <%= language.lastNameRequired %>
            </div>
        </div>
        <div class="mb-3">
            <label for="birthday" class="form-label font-size-14"><%= language.birthday %></label>
            <input
                    name="birthday"
                    type="date"
                    class="form-control"
                    id="birthday"
                    required
            />
            <div class="invalid-feedback" style="display: none">
                <%= language.mustBeEighteen %>
            </div>
        </div>
        <div class="mb-3">
            <label for="email" class="form-label font-size-14"><%= language.emailAddress %></label>
            <input
                    name="email"
                    type="email"
                    class="form-control"
                    id="email"
                    aria-describedby="emailHelp"
                    required
            />
            <div class="invalid-feedback" style="display: none">
                <%= language.validEmailRequired %>
            </div>
        </div>
        <div class="mb-3">
            <label for="password" class="form-label font-size-14"><%= language.password %></label>
            <input
                    name="password"
                    type="password"
                    class="form-control"
                    id="password"
                    required
            />
            <div class="invalid-feedback" style="display: none">
                <%= language.passwordInvalidMessage %>
            </div>
        </div>

        <button type="submit" id="submitButton" class="btn primary-color">
            <%= language.submit %>
        </button>
    </form>
</div>
<script>
    const passwordRegex = /^(?=.*[a-zA-Z])(?=.*[0-9])[A-Za-z0-9@#*_]{5,25}$/;
    const passwordInvalidMessage = '<%= language.passwordInvalidMessage %>';

    function showStatus(message, colorClass) {
        const statusMessage = document.getElementById("statusMessage");
        console.log(statusMessage)
        statusMessage.textContent = message;
        statusMessage.className = `alert ${colorClass} show`;

        // Automatically hide the alert after 4 seconds
        setTimeout(() => {
            statusMessage.style.animation = "fadeOut 0.5s forwards";
            setTimeout(() => {
                statusMessage.className = "alert"; // Reset the alert class
                statusMessage.style.animation = ""; // Reset the animation property
            }, 500); // Matches the duration of the fadeOut animation
        }, 4000); // Time the alert is visible before beginning to fade
    }

    document
        .getElementById("signupForm")
        .addEventListener("submit", function (event) {
            event.preventDefault();
            clearValidationMessages();
            if (validateForm()) {
                submitForm(event);
            }
        });

    function validateForm() {
        let valid = true;
        const formData = new FormData(document.getElementById("signupForm"));
        formData.forEach((value, key) => {
            if (!value.trim()) {
                showErrorMessage(key, "<%= language.fieldRequired %>");
                valid = false;
            }
        });

        const email = formData.get("email");
        if (!validateEmail(email)) {
            showErrorMessage("email", "<%= language.validEmailRequired %>");
            valid = false;
        }

        const password = formData.get("password");
        if (!passwordRegex.test(password)) {
            showErrorMessage("password", passwordInvalidMessage);
            valid = false;
        }

        const birthday = formData.get("birthday");
        if (!isEighteenOrOlder(birthday)) {
            showErrorMessage("birthday", "<%= language.mustBeEighteen %>");
            valid = false;
        }

        return valid;
    }

    function clearValidationMessages() {
        document.querySelectorAll(".invalid-feedback").forEach((element) => {
            element.style.display = "none";
        });
    }

    function showErrorMessage(inputName, message) {
        const element = document.querySelector(`#${inputName} + .invalid-feedback`);
        element.textContent = message;
        element.style.display = "block";
    }

    function validateEmail(email) {
        const re =
            /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        return re.test(String(email).toLowerCase());
    }

    function isEighteenOrOlder(birthday) {
        const today = new Date();
        const birthDate = new Date(birthday);
        let age = today.getFullYear() - birthDate.getFullYear();
        const m = today.getMonth() - birthDate.getMonth();
        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {
            age--;
        }
        return age >= 18;
    }

    async function submitForm(event) {
        const form = event.target;
        const formData = new FormData(form);
        const submitButton = document.getElementById("submitButton");
        // const statusMessage = document.getElementById("statusMessage");

        submitButton.disabled = true;
        // statusMessage.style.display = "block";
        // statusMessage.textContent = ;
        // statusMessage.style.color = "blue";

        showStatus("<%= language.sendingEmail %>", "blue");

        try {
            const response = await fetch("/submitUser", {
                method: "POST",
                body: formData,
            });

            if (response.ok) {
                showStatus("<%= language.verificationEmailSent %>", "green");
            } else {
                const errorData = await response.json();
                showStatus(errorData.message || "<%= language.errorOccurred %>", "red");

                submitButton.disabled = false;
            }
        } catch (error) {
            showStatus("<%= language.errorOccurred %>" + error?.message, "red");

            //   statusMessage.textContent = "An error occurred. Please try again.";
            //   statusMessage.style.color = "red";
            submitButton.disabled = false;
        }
    }
</script>

<%- include("templates/footer") %>
