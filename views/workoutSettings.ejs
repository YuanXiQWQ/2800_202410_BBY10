<%- include("templates/header") %>
<head>
    <title><%= language.workoutSettingsTitle %></title>
    <link rel="stylesheet" href="/styles/profile.css">
    <style>
        .container {
            height: 80%;
            }

        #workoutDaysSelect {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            }

        #workoutDaysSelect button {
            background: #BD7FFF;
            margin-bottom: 5px;
            }

        #workoutDaysSelect button:hover {
            background: #C57FFF;
            }

        #workoutDaysSelect button.active {
            border: 1px solid #8458B2;
            background: #DF7FFF;
            }
    </style>
</head>
<%- include("templates/navbar") %>
<div id="notification" class="alert notification hidden"></div>
<div class="container mt-5">
    <header class="d-flex align-items-center mb-4">
        <a id="btn-back" href="/profile" class="btn btn-outline-secondary me-3">
            <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M4.65419 7.95837H17.3334V10.0417H4.65419L10.2417 15.6292L8.76877 17.1021L0.666687 9.00003L8.76877 0.897949L10.2417 2.37087L4.65419 7.95837Z"
                      fill="black"/>
            </svg>
        </a>
        <%= language.workoutSettings %>
    </header>
    <main>
        <div class="alert secondary-color">
            <%= language.workoutSettingsTips %>
        </div>
        <form method="POST" action="/postWorkoutSettings" class="needs-validation" id="workoutSettingsForm" novalidate>
            <div class="mb-3">
                <label for="goal" class="form-label"><%= language.fitnessGoal %>:</label>
                <input name="goal" id="goal" type="text" class="form-control" placeholder="<%= userData.goal %>">
            </div>
            <div class="mb-3">
                <label for="fitnessLevel" class="form-label"><%= language.fitnessLevel %>:</label>
                <select name="fitnessLevel" id="fitnessLevel" class="form-control">
                    <option value="Beginner" <%= userData.fitnessLevel === 'beginner' ? 'selected' : '' %>><%= language.beginner %></option>
                    <option value="Intermediate" <%= userData.fitnessLevel === 'intermediate' ? 'selected' : '' %>><%= language.intermediate %></option>
                    <option value="Advanced" <%= userData.fitnessLevel === 'advanced' ? 'selected' : '' %>><%= language.advanced %></option>
                </select>
            </div>
            <div class="mb-3">
                <p class="form-label"><%= language.workoutDays %>:</p>
                <input type="hidden" id="days" name="time" value=""/>
                <div class="btn-group-2" role="group" aria-label="<%= language.daysOfWeek %>" id="workoutDaysSelect">
                    <button type="button" class="btn btn-exper day-btn me-1" onclick="toggleDay('0')">
                        <%= language.monday %>
                    </button>
                    <button type="button" class="btn btn-exper day-btn ms-1" onclick="toggleDay('1')">
                        <%= language.tuesday %>
                    </button>
                    <button type="button" class="btn btn-exper day-btn me-1" onclick="toggleDay('2')">
                        <%= language.wednesday %>
                    </button>
                    <button type="button" class="btn btn-exper day-btn ms-1" onclick="toggleDay('3')">
                        <%= language.thursday %>
                    </button>
                    <button type="button" class="btn btn-exper day-btn me-1" onclick="toggleDay('4')">
                        <%= language.friday %>
                    </button>
                    <button type="button" class="btn btn-exper day-btn ms-1" onclick="toggleDay('5')">
                        <%= language.saturday %>
                    </button>
                    <button type="button" class="btn btn-exper day-btn me-1" onclick="toggleDay('6')">
                        <%= language.sunday %>
                    </button>
                </div>
            </div>
            <button type="submit" class="btn btn-primary primary-color primary-color-hover">
                <%= language.submit %>
            </button>
        </form>
        <div id="statusMessage"></div>
    </main>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const statusMessage = document.getElementById('statusMessage');
        if (localStorage.getItem('workoutSuccessFlag')) {
            statusMessage.innerHTML = '<%= language.workoutSettingsSuccess %>';
            statusMessage.style.color = 'green';
            localStorage.removeItem('workoutSuccessFlag');
        }

        document.getElementById('workoutSettingsForm').addEventListener('submit', function (event) {
            event.preventDefault();

            const form = event.target;
            const formData = new FormData(form);
            const statusMessage = document.getElementById('statusMessage');

            statusMessage.textContent = '';
            statusMessage.style.visibility = 'hidden';
            setTimeout(() => {
                statusMessage.style.visibility = 'visible';
            }, 100);

            const workoutData = {
                goal: formData.get('goal') || undefined,
                fitnessLevel: formData.get('fitnessLevel') || undefined,
                time: formData.get('time') || undefined
            };

            fetch('/postWorkoutSettings', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(workoutData)
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        localStorage.setItem('workoutSuccessFlag', 'true');
                        location.reload();
                    } else {
                        statusMessage.textContent = data.message;
                        statusMessage.style.color = 'red';
                    }
                }).catch(err => {
                statusMessage.textContent = '<%= language.errorOccurred %>' + err;
                statusMessage.style.color = 'red';
            });
        });
    });

    function toggleDay(dayIndex) {
        const daysInput = document.getElementById('days');
        let selectedDays = daysInput.value ? daysInput.value.split(',') : [];
        const dayStr = dayIndex.toString();

        const index = selectedDays.indexOf(dayStr);
        if (index > -1) {
            selectedDays.splice(index, 1);
        } else {
            selectedDays.push(dayStr);
        }

        daysInput.value = selectedDays.join(',');
        updateButtonStyles();
    }

    function updateButtonStyles() {
        const selectedDays = document.getElementById('days').value.split(',');
        document.querySelectorAll('.btn-group-2 button').forEach((button, index) => {
            if (selectedDays.includes(index.toString())) {
                button.classList.add('active');
            } else {
                button.classList.remove('active');
            }
        });
    }
</script>
<%- include("templates/footer") %>
