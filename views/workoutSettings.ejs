<%- include("templates/header") %>
<head>
    <title><%= language.workoutSettingsTitle %></title>
    <link rel="stylesheet" href="/styles/profile.css">
</head>
<%- include("templates/navbar") %>
<div id="notification" class="alert notification hidden"></div>
<div class="container mt-5">
    <header class="d-flex align-items-center mb-4">
        <a id="btn-back" href="/profile" class="btn btn-outline-secondary me-3">
            <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M4.65419 7.95837H17.3334V10.0417H4.65419L10.2417 15.6292L8.76877 17.1021L0.666687 9.00003L8.76877 0.897949L10.2417 2.37087L4.65419 7.95837Z"
                      fill="black"/>
            </svg>
        </a>
        <%= language.workoutSettings %>
    </header>
    <main>
        <div class="alert secondary-color">
            <%= language.workoutSettingsTips %>
        </div>
        <form method="POST" action="/postWorkoutSettings" class="needs-validation" id="workoutSettingsForm" novalidate>
            <div class="mb-3">
                <label for="goal" class="form-label"><%= language.fitnessGoal %>:</label>
                <input name="goal" id="goal" type="text" class="form-control" placeholder="<%= userData.goal %>">
            </div>
            <div class="mb-3">
                <label for="fitnessLevel" class="form-label"><%= language.fitnessLevel %>:</label>
                <select name="fitnessLevel" id="fitnessLevel" class="form-control">
                    <option value="beginner" <%= userData.fitnessLevel === 'beginner' ? 'selected' : '' %>>
                        <%= language.beginner %>
                    </option>
                    <option value="intermediate" <%= userData.fitnessLevel === 'intermediate' ? 'selected' : '' %>>
                        <%= language.intermediate %>
                    </option>
                    <option value="advanced" <%= userData.fitnessLevel === 'advanced' ? 'selected' : '' %>>
                        <%= language.advanced %>
                    </option>
                </select>
            </div>
            <div class="mb-3">
                <label for="time" class="form-label"><%= language.workoutDuration %>:</label>
                <input name="time" id="time" type="number" class="form-control" placeholder="<%= userData.time %>">
            </div>
            <button type="submit" class="btn btn-primary primary-color primary-color-hover">
                <%= language.submit %>
            </button>
        </form>
        <div id="statusMessage"></div>
    </main>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const statusMessage = document.getElementById('statusMessage');
        if (localStorage.getItem('workoutSuccessFlag')) {
            statusMessage.innerHTML = language.workoutSettingsSuccess;
            statusMessage.style.color = 'green';
            localStorage.removeItem('workoutSuccessFlag');
        }
    });

    document.getElementById('workoutSettingsForm').addEventListener('submit', function (event) {
        event.preventDefault();

        const form = event.target;
        const formData = new FormData(form);
        const statusMessage = document.getElementById('statusMessage');

        statusMessage.textContent = '';
        statusMessage.style.visibility = 'hidden';
        setTimeout(() => {
            statusMessage.style.visibility = 'visible';
        }, 100);

        const workoutData = {
            goal: formData.get('goal') || undefined,
            fitnessLevel: formData.get('fitnessLevel') || undefined,
            time: formData.get('time') || undefined
        };

        fetch('/postWorkoutSettings', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(workoutData)
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    localStorage.setItem('workoutSuccessFlag', 'true');
                    location.reload();
                } else {
                    statusMessage.textContent = data.message;
                    statusMessage.style.color = 'red';
                }
            })
            .catch(err => {
                statusMessage.textContent = language.errorOccurred;
                statusMessage.style.color = 'red';
            });
    });
</script>
<%- include("templates/footer") %>
