<%- include("templates/header") %>
<head>
  <link rel="stylesheet" href="./styles/additional-info.css" />
</head>



<div class="container mt-5 px-5">


<div class="my-3">
  <h1 class="black d-inline-block border-bottom-2px py-1"><i>Register</i></h1>
</div>

<form class="m-0 w-100" id="regForm"  action="/submitAdditionalInfo"
method="POST"
>

  <!-- <p class="font-size-16 semiBold">Personal Information</p> -->
  
  <!-- One "tab" for each step in the form: -->
  <div style="text-align:center;margin-bottom:20px;">
    <span class="step"></span>
    <span class="step"></span>
    <span class="step"></span>
    <span class="step"></span>
  </div>
  <div class="tab">
      

    <div class="input-group d-flex flex-column mb-3">
      <label  for="weight" class="form-label font-size-14">Weight</label>
      <div  class="position-relative">
        <input type="number" class="form-control" placeholder="Your weight" aria-label="Weight" min="1" name="weight" required>
        <div class="input-group-append" id="weightUnitButtons">
          <button class="btn btn-outline-secondary " type="button" onclick="setWeightUnit('kg')">kg</button>
          <button class="btn btn-outline-secondary" type="button" onclick="setWeightUnit('lb')">lb</button>
        </div>
      </div>
  
    </div>

    <div class="input-group d-flex flex-column mb-3">

      <label  for="height" class="form-label font-size-14">Height</label>
      <div class="position-relative">
        <input type="number" class="form-control" placeholder="Your height" aria-label="Height" min="1" name="height" required>
            <div class="input-group-append" id="heightUnitButtons">
              <button class="btn btn-outline-secondary " type="button" onclick="setHeightUnit('cm')">cm</button>
              <button class="btn btn-outline-secondary" type="button" onclick="setHeightUnit('ft')">ft</button>
            </div>
      </div>
     
    </div>
  </div>
  
  <div class="tab">
    <p class="font-size-16 semiBold">What is your experience in working out?</p>
    <input type="hidden" id="experienceLevel" name="experienceLevel" value="">

    <div class="d-flex flex-column btn-group-1" role="group" aria-label="Workout Experience">
      <button type="button" class="btn btn-secondary btn-exper" onclick="setExperience('beginner')">
      <p  class=" mb-1 bold text-start">Beginner</p>
      <p class="  mb-1 light text-start   font-size-12">Less than 6 months</p></button>
      <button type="button" class="btn btn-secondary  btn-exper" onclick="setExperience('intermediate')">
        <p class= " mb-1 bold text-start">Intermediate</p>
        <p class="  mb-1 light text-start  font-size-12">More than 6 months and less than 2 years</p></button>
        </button>
      <button type="button" class="btn btn-secondary  btn-exper" onclick="setExperience('advanced')">
        <p  class=" mb-1 bold text-start">Advanced</p>
        <p class="  mb-1 light text-start  font-size-12">More than 2 years</p></button>
        </button>
    </div>
  </div>
  
  <div class="tab">
    <p class="font-size-16 semiBold">Which Days of the week do you want to workout?</p>
    <input type="hidden" id="days" name="time" value="">

    <div class="btn-group-2 d-flex flex-wrap" role="group" aria-label="Days of the Week">
      
      <button type="button" class="btn btn-exper day-btn me-1" onclick="toggleDay('0')">Monday</button>
      <button type="button" class="btn  btn-exper day-btn  ms-1" onclick="toggleDay('1')">Tuesday</button>
      <button type="button" class="btn  btn-exper day-btn  me-1" onclick="toggleDay('2')">Wednesday</button>
      <button type="button" class="btn  btn-exper day-btn ms-1" onclick="toggleDay('3')">Thursday</button>
      <button type="button" class="btn  btn-exper day-btn  me-1" onclick="toggleDay('4')">Friday</button>
      <button type="button" class="btn  btn-exper day-btn ms-1" onclick="toggleDay('5')">Saturday</button>
      <button type="button" class="btn  btn-exper day-btn  me-1" onclick="toggleDay('6')">Sunday</button>
    </div>
  </div>

  <div class="tab">
    <p class="font-size-16 semiBold">What is your goal?</p>
    
      <textarea class="form-control"  id="goal" name="goal" required rows="3"></textarea>
    </div>
  


  <div style="overflow:auto;margin-top: 20px;">
    <div style="float:right;">
      <button type="button" class="btn btn-width secondary-color" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
      <button type="button" class="btn btn-width primary-color " id="nextBtn" onclick="nextPrev(1)">Next</button>
    </div>
  </div>
  
  <!-- Circles which indicates the steps of the form: -->

  
  </form>
<!-- 
<form
  action="/submitAdditionalInfo"
  class="form-group"
  method="POST"
  id="additional-info"
>




  <h1>Workout Details</h1>

  <div class="my-4">
    <label for="weight">Weight:</label>
    <input class="form-control" id="weight" placeholder="in KG" name="weight" required />
  </div>

  <div class="my-4">
    <label for="height">Height:</label>
    <input class="form-control" placeholder="in cm" id="height" name="height" required />
  </div>

  <div class="my-4">
    <label for="time">Workout Plan Duration:</label>
    <select
      class="form-select"
      id="workout_duration"
      name="time"
      aria-label="Default select example"
    >
      <option selected>Select a day</option>
      <option value="0">Monday</option>
      <option value="1">Tuesday</option>
      <option value="2">Wednesday</option>
      <option value="3">Thursday</option>
      <option value="4">Friday</option>
      <option value="5">Sunday</option>
    </select>
  </div>

  <div class="my-4">
    <label for="goal">Goal:</label>
    <textarea class="form-control"  id="goal" name="goal" required rows="3"></textarea>
  </div>

  <div class="my-4">
    <label for="workoutLevel">Workout Level:</label>
    <select
      class="form-control"
      required
      id="workoutLevel"
      name="fitnessLevel"
      required
    >
      <option selected>Select level</option>
      <option value="beginner">Beginner</option>
      <option value="intermediate">Intermediate</option>
      <option value="advanced">Advanced</option>
    </select>
  </div>
  <button type="submit" class="btn primary-color primary-color-hover">
    Submit
  </button>
</form> -->

<script>

document.addEventListener('DOMContentLoaded', function() {
  // Set default units on initial load
  setWeightUnit('kg');
  setHeightUnit('cm');
  updateButtonStyles();

});

function toggleDay(dayIndex) {
  let selectedDays = document.getElementById('days').value ? document.getElementById('days').value.split(',') : [];
  const dayStr = dayIndex.toString();

  const index = selectedDays.indexOf(dayStr);
  if (index > -1) {
    selectedDays.splice(index, 1); // Remove day if already selected
  } else {
    selectedDays.push(dayStr); // Add day if not already selected
  }

  // Update the hidden input and button appearance
  document.getElementById('days').value = selectedDays.join(',');
  updateButtonStyles();
}

function updateButtonStyles() {
  const selectedDays = document.getElementById('days').value.split(',');
  document.querySelectorAll('.btn-group-2 button').forEach((button, index) => {
    if (selectedDays.includes(index.toString())) {
      button.classList.add('active');
    } else {
      button.classList.remove('active');
    }
  });
}

function setExperience(level) {
  const experienceButtons = document.querySelectorAll('.btn-group-1 button');
  experienceButtons.forEach(button => {
    if (button.textContent.toLowerCase().includes(level) ) {
      button.classList.add('active'); // Highlight the active button
    } else {
      button.classList.remove('active'); // Remove highlight from other buttons
    }
  });

  // Optionally set a hidden input value if needed for form submission
  document.getElementById('experienceLevel').value = level;
}

  var currentTab = 0; // Current tab is set to be the first tab (0)
showTab(currentTab); // Display the current tab

function showTab(n) {
  // This function will display the specified tab of the form ...
  var x = document.getElementsByClassName("tab");
  x[n].style.display = "block";
  // ... and fix the Previous/Next buttons:
  if (n == 0) {
    document.getElementById("prevBtn").style.display = "none";
  } else {
    document.getElementById("prevBtn").style.display = "inline";
  }
  if (n == (x.length - 1)) {
    document.getElementById("nextBtn").innerHTML = "Submit";
  } else {
    document.getElementById("nextBtn").innerHTML = "Next";
  }
  // ... and run a function that displays the correct step indicator:
  fixStepIndicator(n)
}

function nextPrev(n) {
  // This function will figure out which tab to display
  var x = document.getElementsByClassName("tab");
  // Exit the function if any field in the current tab is invalid:
  if (n == 1 && !validateForm()) return false;
  // Hide the current tab:
  x[currentTab].style.display = "none";
  // Increase or decrease the current tab by 1:
  currentTab = currentTab + n;
  // if you have reached the end of the form... :
  if (currentTab >= x.length) {
    //...the form gets submitted:
    document.getElementById("nextBtn").type = "submit"
    document.getElementById("regForm").submit();
    return false;
  }
  // Otherwise, display the correct tab:
  showTab(currentTab);
}

function validateForm() {
  // This function deals with validation of the form fields
  var x, y, i, valid = true;
  x = document.getElementsByClassName("tab");
  y = x[currentTab].getElementsByTagName("input");
  // A loop that checks every input field in the current tab:
  for (i = 0; i < y.length; i++) {
    // If a field is empty...
    if (y[i].value == "") {
      // add an "invalid" class to the field:
      y[i].className += " invalid";
      // and set the current valid status to false:
      valid = false;
    }
  }
  // If the valid status is true, mark the step as finished and valid:
  if (valid) {
    document.getElementsByClassName("step")[currentTab].className += " finish";
  }
  return valid; // return the valid status
}

function fixStepIndicator(n) {
  // This function removes the "active" class of all steps...
  var i, x = document.getElementsByClassName("step");
  for (i = 0; i < x.length; i++) {
    x[i].className = x[i].className.replace(" active", "");
  }
  //... and adds the "active" class to the current step:
  x[n].className += " active";
}

function setWeightUnit(unit) {
  var weightButtons = document.querySelectorAll('#weightUnitButtons button');
  weightButtons.forEach(btn => {
    if (btn.textContent === unit) {
      btn.classList.add('active-unit');
    } else {
      btn.classList.remove('active-unit');
    }
  });
  document.querySelector('input[name="weight"]').setAttribute('data-unit', unit);
}

function setHeightUnit(unit) {
  var heightButtons = document.querySelectorAll('#heightUnitButtons button');
  heightButtons.forEach(btn => {
    if (btn.textContent === unit) {
      btn.classList.add('active-unit');
    } else {
      btn.classList.remove('active-unit');
    }
  });
}
</script>


<%- include("templates/footer") %>
