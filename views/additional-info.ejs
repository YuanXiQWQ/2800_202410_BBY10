<%- include("templates/header") %>

<head>
    <title><%= language.workoutDetailsTitle %></title>
    <link rel="stylesheet" href="/styles/additional-info.css"/>
</head>

<div class="container mt-5 px-5">
    <div class="my-3">
        <h1 class="black d-inline-block border-bottom-2px py-1">
            <i> <%= language.register %> </i>
        </h1>
    </div>

    <div class="spinner-grow text-primary" id="loadingIndicator" style="display: none; text-align: center" role="status">
        <span class="sr-only"> <%= language.loading %> </span>
    </div>
    <form class="m-0 w-100" id="regForm" action="/submitAdditionalInfo" method="POST">
        <div style="text-align: center; margin-bottom: 20px">
            <span class="step"></span>
            <span class="step"></span>
            <span class="step"></span>
            <span class="step"></span>
        </div>
        <div class="tab">
            <div class="input-group d-flex flex-column mb-3">
                <label for="weight" class="form-label font-size-14 required">
                    <%= language.weight %>
                </label>
                <div class="position-relative">
                    <input type="number" class="form-control" placeholder="<%= language.yourWeight %>"
                           aria-label="<%= language.weight %>" min="1" name="weight" required/>
                    <div class="input-group-append" id="weightUnitButtons">
                        <button class="btn btn-outline-secondary" type="button" onclick="setWeightUnit('kg')">
                            kg
                        </button>
                        <button class="btn btn-outline-secondary" type="button" onclick="setWeightUnit('lb')">
                            lb
                        </button>
                    </div>
                </div>
            </div>

            <div class="input-group d-flex flex-column mb-3">
                <label for="height" class="form-label font-size-14 required">
                    <%= language.height %>
                </label>
                <div class="position-relative">
                    <input type="number" class="form-control" placeholder="<%= language.yourHeight %>"
                           aria-label="<%= language.height %>" min="1" name="height" required/>
                    <div class="input-group-append" id="heightUnitButtons">
                        <button class="btn btn-outline-secondary" type="button" onclick="setHeightUnit('cm')">
                            cm
                        </button>
                        <button class="btn btn-outline-secondary" type="button" onclick="setHeightUnit('ft')">
                            ft
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="tab">
            <p class="font-size-16 semiBold"><%= language.experienceInWorkout %></p>
            <input type="hidden" id="fitnessLevel" name="fitnessLevel" value=""/>

            <div class="d-flex flex-column btn-group-1" role="group" aria-label="<%= language.workoutExperience %>">
                <button type="button" class="btn btn-secondary btn-exper" onclick="setExperience('Beginner')"
                        data-level="Beginner">
                    <p class="mb-1 bold text-start"><%= language.beginner %></p>
                    <p class="mb-1 light text-start font-size-12"><%= language.lessThanSixMonths %></p>
                </button>

                <button type="button" class="btn btn-secondary btn-exper" onclick="setExperience('Intermediate')"
                        data-level="Intermediate">
                    <p class="mb-1 bold text-start"><%= language.intermediate %></p>
                    <p class="mb-1 light text-start font-size-12"><%= language.moreThanSixMonthsLessThanTwoYears %></p>
                </button>

                <button type="button" class="btn btn-secondary btn-exper" onclick="setExperience('Advanced')"
                        data-level="Advanced">
                    <p class="mb-1 bold text-start"><%= language.advanced %></p>
                    <p class="mb-1 light text-start font-size-12"><%= language.moreThanTwoYears %></p>
                </button>
            </div>
        </div>

        <div class="tab">
            <p class="font-size-16 semiBold"><%= language.workoutDays %></p>
            <input type="hidden" id="days" name="time" value=""/>

            <div class="btn-group-2 d-flex flex-wrap" role="group" aria-label="<%= language.daysOfWeek %>">
                <button type="button" class="btn btn-exper day-btn me-1" onclick="toggleDay('0')">
                    <%= language.monday %>
                </button>

                <button type="button" class="btn btn-exper day-btn ms-1" onclick="toggleDay('1')">
                    <%= language.tuesday %>
                </button>

                <button type="button" class="btn btn-exper day-btn me-1" onclick="toggleDay('2')">
                    <%= language.wednesday %>
                </button>

                <button type="button" class="btn btn-exper day-btn ms-1" onclick="toggleDay('3')">
                    <%= language.thursday %>
                </button>

                <button type="button" class="btn btn-exper day-btn me-1" onclick="toggleDay('4')">
                    <%= language.friday %>
                </button>

                <button type="button" class="btn btn-exper day-btn ms-1" onclick="toggleDay('5')">
                    <%= language.saturday %>
                </button>

                <button type="button" class="btn btn-exper day-btn me-1" onclick="toggleDay('6')">
                    <%= language.sunday %>
                </button>
            </div>
        </div>

        <div class="tab">
            <p class="font-size-16 semiBold">
                <%= language.yourGoal %>
                <label for="goal" class="form-label required"></label>
            </p>

            <div class="d-flex flex-column btn-group-3" role="group" aria-label="<%= language.workoutExperience %>">
                <input type="hidden" id="goal" name="goal" value=""/>

                <button type="button" class="btn btn-secondary btn-exper" onclick="setGoal('GainMuscle')"
                        data-goal="gainMuscle">
                    <p class="mb-1 bold text-start"><%= language.gainMuscle %></p>
                </button>

                <button type="button" class="btn btn-secondary btn-exper" onclick="setGoal('LoseWeight')"
                        data-goal="loseWeight">
                    <p class="mb-1 bold text-start"><%= language.loseWeight %></p>
                </button>

                <button type="button" class="btn btn-secondary btn-exper" onclick="setGoal('FatLoss')"
                        data-goal="fatLoss">
                    <p class="mb-1 bold text-start"><%= language.fatLoss %></p>
                </button>

                <button type="button" class="btn btn-secondary btn-exper" onclick="setGoal('Flexibility')"
                        data-goal="flexibility">
                    <p class="mb-1 bold text-start"><%= language.flexibility %></p>
                </button>
            </div>

            <div class="form-check mt-3">
                <input class="form-check-input" type="checkbox" id="termsCheckbox" required/>
                <p>
                    <label class="form-check-label required" for="termsCheckbox">
                        <%= language.agreeTo %>
                        <a href="#" id="termsLink"> <%= language.termsAndConditions %> </a>
                    </label>
                </p>
            </div>
        </div>

        <div style="overflow: auto; margin-top: 20px">
            <div style="float: right">
                <button type="button" class="btn btn-width secondary-color" id="prevBtn" onclick="nextPrev(-1)">
                    <%= language.previous %>
                </button>

                <button type="button" class="btn btn-width primary-color" id="nextBtn" onclick="nextPrev(1)">
                    <%= language.next %>
                </button>
            </div>
        </div>
    </form>

    <div class="modal fade" id="termsModal" tabindex="-1" aria-labelledby="termsModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="termsModalLabel">
                        <%- language.termsAndConditions %>
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <h5><%- language.termsTitle %></h5>

                    <p>
                        <strong>1. <%- language.introduction %></strong><br/>
                        <%- language.introductionContent %>
                    </p>

                    <p>
                        <strong>2. <%- language.acceptanceOfTerms %></strong><br/>
                        <%- language.acceptanceOfTermsContent %>
                    </p>

                    <p>
                        <strong>3. <%- language.userDataAndPrivacy %></strong><br/>
                        <%- language.userDataAndPrivacyContent %>
                    </p>

                    <p>
                        <strong>4. <%- language.userResponsibilities %></strong><br/>
                        <%- language.userResponsibilitiesContent %>
                    </p>

                    <p>
                        <strong>5. <%- language.prohibitedActivities %></strong><br/>
                        <%- language.prohibitedActivitiesContent %>
                    </p>

                    <p>
                        <strong>6. <%- language.intellectualProperty %></strong><br/>
                        <%- language.intellectualPropertyContent %>
                    </p>

                    <p>
                        <strong>7. <%- language.disclaimers %></strong><br/>
                        <%- language.disclaimersContent %>
                    </p>

                    <p>
                        <strong>8. <%- language.limitationOfLiability %></strong><br/>
                        <%- language.limitationOfLiabilityContent %>
                    </p>

                    <p>
                        <strong>9. <%- language.changesToTerms %></strong><br/>
                        <%- language.changesToTermsContent %>
                    </p>

                    <p>
                        <strong>10. <%- language.termination %></strong><br/>
                        <%- language.terminationContent %>
                    </p>

                    <p>
                        <strong>11. <%- language.governingLaw %></strong><br/>
                        <%- language.governingLawContent %>
                    </p>

                    <p>
                        <strong>12. <%- language.contactInformation %></strong><br/>
                        <%- language.contactInformationContent %>
                    </p>

                    <p>
                        <strong>13. <%- language.entireAgreement %></strong><br/>
                        <%- language.entireAgreementContent %>
                    </p>

                    <p>
                        <strong>14. <%- language.waiver %></strong><br/>
                        <%- language.waiverContent %>
                    </p>

                    <p>
                        <strong>15. <%- language.severability %></strong><br/>
                        <%- language.severabilityContent %>
                    </p>

                    <p>
                        <%- language.conclusion %>
                    </p>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" id="declineBtn" data-bs-dismiss="modal">
                        <%- language.decline %>
                    </button>

                    <button type="button" class="btn btn-primary" id="acceptBtn" data-bs-dismiss="modal">
                        <%- language.accept %>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const weightInput = document.querySelector('input[name="weight"]');
            const heightInput = document.querySelector('input[name="height"]');

            weightInput.addEventListener('input', function () {
                if (this.value !== "" && parseFloat(this.value) < 1) {
                    this.value = 1;
                }
            });

            heightInput.addEventListener('input', function () {
                if (this.value !== "" && parseFloat(this.value) < 1) {
                    this.value = 1;
                }
            });

            setWeightUnit("kg");
            setHeightUnit("cm");

            updateButtonStyles();

            const termsCheckbox = document.getElementById("termsCheckbox");
            const termsLink = document.getElementById("termsLink");
            const termsModal = new bootstrap.Modal(
                document.getElementById("termsModal")
            );
            const acceptBtn = document.getElementById("acceptBtn");
            const declineBtn = document.getElementById("declineBtn");
            const submitBtn = document.getElementById("submitBtn");

            termsLink.addEventListener("click", function (event) {
                event.preventDefault();
                termsModal.show();
            });

            termsCheckbox.addEventListener("click", function (event) {
                event.preventDefault();
                termsModal.show();
            });

            acceptBtn.addEventListener("click", function () {
                termsCheckbox.checked = true;
                submitBtn.disabled = !termsCheckbox.checked;
            });

            declineBtn.addEventListener("click", function () {
                termsCheckbox.checked = false;
                submitBtn.disabled = !termsCheckbox.checked;
            });
        });

        function toggleDay(dayIndex) {
            let selectedDays = document.getElementById("days").value
                ? document.getElementById("days").value.split(",")
                : [];
            const dayStr = dayIndex.toString();

            const index = selectedDays.indexOf(dayStr);
            if (index > -1) {
                selectedDays.splice(index, 1);
            } else {
                selectedDays.push(dayStr);
            }

            document.getElementById("days").value = selectedDays.join(",");
            console.log(document.getElementById("days").value);
            updateButtonStyles();
        }

        function updateButtonStyles() {
            const selectedDays = document.getElementById("days").value.split(",");
            document
                .querySelectorAll(".btn-group-2 button")
                .forEach((button, index) => {
                    if (selectedDays.includes(index.toString())) {
                        button.classList.add("active");
                    } else {
                        button.classList.remove("active");
                    }
                });
        }

        function setExperience(level) {
            const experienceButtons = document.querySelectorAll(
                ".btn-group-1 button"
            );
            experienceButtons.forEach((button) => {
                // If using textContent, the other language won't match
                const buttonLevel = button.getAttribute("data-level");
                if (buttonLevel.toLowerCase() === level.toLowerCase()) {
                    button.classList.add("active");
                } else {
                    button.classList.remove("active");
                }
            });

            document.getElementById("fitnessLevel").value = level;
        }

        let currentTab = 0;
        showTab(currentTab);

        function showTab(n) {
            const x = document.getElementsByClassName("tab");
            x[n].style.display = "block";
            if (n === 0) {
                document.getElementById("prevBtn").style.display = "none";
            } else {
                document.getElementById("prevBtn").style.display = "inline";
            }
            if (n === x.length - 1) {
                document.getElementById("nextBtn").innerHTML = "<%= language.submit %>";
            } else {
                document.getElementById("nextBtn").innerHTML = "<%= language.next %>";
            }
            fixStepIndicator(n);
        }

        function nextPrev(n) {
            const x = document.getElementsByClassName("tab");

            if (n === 1 && !validateForm()) return false;

            if (currentTab === 0) {
                convertWeightToKg();
                convertHeightToCm();
            }

            x[currentTab].style.display = "none";
            currentTab = currentTab + n;

            if (currentTab >= x.length) {
                showLoading(true);
                document.getElementById("nextBtn").type = "submit";
                document.getElementById("regForm").submit();
                document.getElementById("nextBtn").style.display = "none";
                document.getElementById("prevBtn").style.display = "none";

                return false;
            }
            showTab(currentTab);
        }

        function convertWeightToKg() {
            const weightInput = document.querySelector('input[name="weight"]');
            const weightUnit = weightInput.getAttribute("data-unit");
            let weightValue = parseFloat(weightInput.value);

            if (weightUnit === "lb") {
                weightValue = weightValue * 0.453592;
            }

            weightInput.value = weightValue.toFixed(2);
        }

        function convertHeightToCm() {
            const heightInput = document.querySelector('input[name="height"]');
            const heightUnit = heightInput.getAttribute("data-unit");
            let heightValue = parseFloat(heightInput.value);

            if (heightUnit === "ft") {
                heightValue = heightValue * 30.48;
            }

            heightInput.value = heightValue.toFixed(2);
        }

        function validateForm() {
            let x, y, i, valid = true;
            x = document.getElementsByClassName("tab");
            y = x[currentTab].getElementsByTagName("input");

            for (i = 0; i < y.length; i++) {
                if (y[i].value === "" || parseFloat(y[i].value.length) < 1) {
                    y[i].className += " invalid";
                    valid = false;
                } else {
                    y[i].classList.remove("invalid");
                }
            }

            if (currentTab === 2) {
                const selectedDays = document.getElementById("days").value;
                if (selectedDays === "") {
                    valid = false;
                    document.getElementById("days").className += " invalid";
                } else {
                    document.getElementById("days").classList.remove("invalid");
                }
            }

            if (currentTab === 1) {
                const fitnessLevel = document.getElementById("fitnessLevel").value;
                if (fitnessLevel === "") {
                    valid = false;
                    document.getElementById("fitnessLevel").className += " invalid";
                } else {
                    document.getElementById("fitnessLevel").classList.remove("invalid");
                }
            }

            if (currentTab === 3) {
                const goal = document.getElementById("goal").value;
                if (goal === "") {
                    valid = false;
                    document.getElementById("goal").className += " invalid";
                } else {
                    document.getElementById("goal").classList.remove("invalid");
                }

                const termsCheckbox = document.getElementById("termsCheckbox");
                if (!termsCheckbox.checked) {
                    valid = false;
                    termsCheckbox.className += " invalid";
                } else {
                    termsCheckbox.classList.remove("invalid");
                }
            }

            if (valid) {
                document.getElementsByClassName("step")[currentTab].className += " finish";
            }
            console.log(valid)

            return valid;
        }

        function fixStepIndicator(n) {
            let i,
                x = document.getElementsByClassName("step");
            for (i = 0; i < x.length; i++) {
                x[i].className = x[i].className.replace(" active", "");
            }
            x[n].className += " active";
        }

        function setWeightUnit(unit) {
            const weightButtons = document.querySelectorAll(
                "#weightUnitButtons button"
            );
            weightButtons.forEach((btn) => {
                console.log(unit, btn.textContent);
                if (btn.textContent.includes(unit)) {
                    btn.classList.add("active-unit");
                } else {
                    btn.classList.remove("active-unit");
                }
            });
            document
                .querySelector('input[name="weight"]')
                .setAttribute("data-unit", unit);
        }

        function showLoading(show) {
            document.getElementById("loadingIndicator").style.display = show
                ? "block"
                : "none";
        }

        function setHeightUnit(unit) {
            const heightButtons = document.querySelectorAll(
                "#heightUnitButtons button"
            );
            heightButtons.forEach((btn) => {
                if (btn.textContent.includes(unit)) {
                    btn.classList.add("active-unit");
                } else {
                    btn.classList.remove("active-unit");
                }
            });
        }

        function setGoal(goal) {
            const goalButtons = document.querySelectorAll(
                ".btn-group-3 button.btn-exper"
            );
            const goalInput = document.getElementById("goal");

            goalButtons.forEach((button) => {
                const buttonGoal = button.getAttribute("data-goal");
                if (buttonGoal.toLowerCase() === goal.toLowerCase()) {
                    button.classList.add("active");
                } else {
                    button.classList.remove("active");
                }
            });

            goalInput.value = goal;
        }
    </script>
    <%- include("templates/footer") %>
</div>
